// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: grpc-proto/social.proto

package grpc_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PING
type PingApiSocialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingApiSocialRequest) Reset() {
	*x = PingApiSocialRequest{}
	mi := &file_grpc_proto_social_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingApiSocialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingApiSocialRequest) ProtoMessage() {}

func (x *PingApiSocialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingApiSocialRequest.ProtoReflect.Descriptor instead.
func (*PingApiSocialRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{0}
}

type PingApiSocialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PingApiSocialResponse) Reset() {
	*x = PingApiSocialResponse{}
	mi := &file_grpc_proto_social_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingApiSocialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingApiSocialResponse) ProtoMessage() {}

func (x *PingApiSocialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingApiSocialResponse.ProtoReflect.Descriptor instead.
func (*PingApiSocialResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{1}
}

func (x *PingApiSocialResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// POST CREATE
type PostCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Post *Post `protobuf:"bytes,1,opt,name=post,proto3" json:"post,omitempty"`
}

func (x *PostCreateRequest) Reset() {
	*x = PostCreateRequest{}
	mi := &file_grpc_proto_social_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCreateRequest) ProtoMessage() {}

func (x *PostCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCreateRequest.ProtoReflect.Descriptor instead.
func (*PostCreateRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{2}
}

func (x *PostCreateRequest) GetPost() *Post {
	if x != nil {
		return x.Post
	}
	return nil
}

type PostCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Post *Post `protobuf:"bytes,1,opt,name=post,proto3" json:"post,omitempty"`
}

func (x *PostCreateResponse) Reset() {
	*x = PostCreateResponse{}
	mi := &file_grpc_proto_social_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCreateResponse) ProtoMessage() {}

func (x *PostCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCreateResponse.ProtoReflect.Descriptor instead.
func (*PostCreateResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{3}
}

func (x *PostCreateResponse) GetPost() *Post {
	if x != nil {
		return x.Post
	}
	return nil
}

// POSTS FETCH BY USER ID
type PostsFetchByUserIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentUserId string `protobuf:"bytes,1,opt,name=currentUserId,proto3" json:"currentUserId,omitempty"`
	TargetUserId  string `protobuf:"bytes,2,opt,name=targetUserId,proto3" json:"targetUserId,omitempty"`
	IsVirtual     bool   `protobuf:"varint,3,opt,name=isVirtual,proto3" json:"isVirtual,omitempty"`
}

func (x *PostsFetchByUserIDRequest) Reset() {
	*x = PostsFetchByUserIDRequest{}
	mi := &file_grpc_proto_social_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostsFetchByUserIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostsFetchByUserIDRequest) ProtoMessage() {}

func (x *PostsFetchByUserIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostsFetchByUserIDRequest.ProtoReflect.Descriptor instead.
func (*PostsFetchByUserIDRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{4}
}

func (x *PostsFetchByUserIDRequest) GetCurrentUserId() string {
	if x != nil {
		return x.CurrentUserId
	}
	return ""
}

func (x *PostsFetchByUserIDRequest) GetTargetUserId() string {
	if x != nil {
		return x.TargetUserId
	}
	return ""
}

func (x *PostsFetchByUserIDRequest) GetIsVirtual() bool {
	if x != nil {
		return x.IsVirtual
	}
	return false
}

type PostsFetchByUserIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Posts []*Post `protobuf:"bytes,1,rep,name=posts,proto3" json:"posts,omitempty"`
}

func (x *PostsFetchByUserIDResponse) Reset() {
	*x = PostsFetchByUserIDResponse{}
	mi := &file_grpc_proto_social_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostsFetchByUserIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostsFetchByUserIDResponse) ProtoMessage() {}

func (x *PostsFetchByUserIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostsFetchByUserIDResponse.ProtoReflect.Descriptor instead.
func (*PostsFetchByUserIDResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{5}
}

func (x *PostsFetchByUserIDResponse) GetPosts() []*Post {
	if x != nil {
		return x.Posts
	}
	return nil
}

// POST DELETE
type PostDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId    string `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	UserId    string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsVirtual bool   `protobuf:"varint,3,opt,name=is_virtual,json=isVirtual,proto3" json:"is_virtual,omitempty"`
}

func (x *PostDeleteRequest) Reset() {
	*x = PostDeleteRequest{}
	mi := &file_grpc_proto_social_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostDeleteRequest) ProtoMessage() {}

func (x *PostDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostDeleteRequest.ProtoReflect.Descriptor instead.
func (*PostDeleteRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{6}
}

func (x *PostDeleteRequest) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *PostDeleteRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PostDeleteRequest) GetIsVirtual() bool {
	if x != nil {
		return x.IsVirtual
	}
	return false
}

type PostDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PostDeleteResponse) Reset() {
	*x = PostDeleteResponse{}
	mi := &file_grpc_proto_social_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostDeleteResponse) ProtoMessage() {}

func (x *PostDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostDeleteResponse.ProtoReflect.Descriptor instead.
func (*PostDeleteResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{7}
}

// POSTS FETCH VIRTUAL LATEST
type PostsFetchVirtualLatestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string            `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsVirtual   bool              `protobuf:"varint,2,opt,name=is_virtual,json=isVirtual,proto3" json:"is_virtual,omitempty"`
	PagesStates map[string][]byte `protobuf:"bytes,3,rep,name=pages_states,json=pagesStates,proto3" json:"pages_states,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PostsFetchVirtualLatestRequest) Reset() {
	*x = PostsFetchVirtualLatestRequest{}
	mi := &file_grpc_proto_social_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostsFetchVirtualLatestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostsFetchVirtualLatestRequest) ProtoMessage() {}

func (x *PostsFetchVirtualLatestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostsFetchVirtualLatestRequest.ProtoReflect.Descriptor instead.
func (*PostsFetchVirtualLatestRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{8}
}

func (x *PostsFetchVirtualLatestRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PostsFetchVirtualLatestRequest) GetIsVirtual() bool {
	if x != nil {
		return x.IsVirtual
	}
	return false
}

func (x *PostsFetchVirtualLatestRequest) GetPagesStates() map[string][]byte {
	if x != nil {
		return x.PagesStates
	}
	return nil
}

type PostsFetchVirtualLatestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Posts       []*Post           `protobuf:"bytes,1,rep,name=posts,proto3" json:"posts,omitempty"`
	PagesStates map[string][]byte `protobuf:"bytes,2,rep,name=pages_states,json=pagesStates,proto3" json:"pages_states,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PostsFetchVirtualLatestResponse) Reset() {
	*x = PostsFetchVirtualLatestResponse{}
	mi := &file_grpc_proto_social_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostsFetchVirtualLatestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostsFetchVirtualLatestResponse) ProtoMessage() {}

func (x *PostsFetchVirtualLatestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostsFetchVirtualLatestResponse.ProtoReflect.Descriptor instead.
func (*PostsFetchVirtualLatestResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{9}
}

func (x *PostsFetchVirtualLatestResponse) GetPosts() []*Post {
	if x != nil {
		return x.Posts
	}
	return nil
}

func (x *PostsFetchVirtualLatestResponse) GetPagesStates() map[string][]byte {
	if x != nil {
		return x.PagesStates
	}
	return nil
}

// POSTS FETCH VIRTUAL BY KEYWORDS LATEST
type PostsFetchVirtualByKeywordsLatestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId              string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PreferredKeywords   []string `protobuf:"bytes,2,rep,name=preferred_keywords,json=preferredKeywords,proto3" json:"preferred_keywords,omitempty"`
	RecommendedKeywords []string `protobuf:"bytes,3,rep,name=recommended_keywords,json=recommendedKeywords,proto3" json:"recommended_keywords,omitempty"`
	TrendingKeywords    []string `protobuf:"bytes,4,rep,name=trending_keywords,json=trendingKeywords,proto3" json:"trending_keywords,omitempty"`
	RandomeKeywords     []string `protobuf:"bytes,5,rep,name=randome_keywords,json=randomeKeywords,proto3" json:"randome_keywords,omitempty"`
	PagesState          []byte   `protobuf:"bytes,6,opt,name=pages_state,json=pagesState,proto3" json:"pages_state,omitempty"`
}

func (x *PostsFetchVirtualByKeywordsLatestRequest) Reset() {
	*x = PostsFetchVirtualByKeywordsLatestRequest{}
	mi := &file_grpc_proto_social_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostsFetchVirtualByKeywordsLatestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostsFetchVirtualByKeywordsLatestRequest) ProtoMessage() {}

func (x *PostsFetchVirtualByKeywordsLatestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostsFetchVirtualByKeywordsLatestRequest.ProtoReflect.Descriptor instead.
func (*PostsFetchVirtualByKeywordsLatestRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{10}
}

func (x *PostsFetchVirtualByKeywordsLatestRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PostsFetchVirtualByKeywordsLatestRequest) GetPreferredKeywords() []string {
	if x != nil {
		return x.PreferredKeywords
	}
	return nil
}

func (x *PostsFetchVirtualByKeywordsLatestRequest) GetRecommendedKeywords() []string {
	if x != nil {
		return x.RecommendedKeywords
	}
	return nil
}

func (x *PostsFetchVirtualByKeywordsLatestRequest) GetTrendingKeywords() []string {
	if x != nil {
		return x.TrendingKeywords
	}
	return nil
}

func (x *PostsFetchVirtualByKeywordsLatestRequest) GetRandomeKeywords() []string {
	if x != nil {
		return x.RandomeKeywords
	}
	return nil
}

func (x *PostsFetchVirtualByKeywordsLatestRequest) GetPagesState() []byte {
	if x != nil {
		return x.PagesState
	}
	return nil
}

type PostsFetchVirtualByKeywordsLatestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Posts     []*Post `protobuf:"bytes,1,rep,name=posts,proto3" json:"posts,omitempty"`
	PageState []byte  `protobuf:"bytes,2,opt,name=page_state,json=pageState,proto3" json:"page_state,omitempty"`
}

func (x *PostsFetchVirtualByKeywordsLatestResponse) Reset() {
	*x = PostsFetchVirtualByKeywordsLatestResponse{}
	mi := &file_grpc_proto_social_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostsFetchVirtualByKeywordsLatestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostsFetchVirtualByKeywordsLatestResponse) ProtoMessage() {}

func (x *PostsFetchVirtualByKeywordsLatestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostsFetchVirtualByKeywordsLatestResponse.ProtoReflect.Descriptor instead.
func (*PostsFetchVirtualByKeywordsLatestResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{11}
}

func (x *PostsFetchVirtualByKeywordsLatestResponse) GetPosts() []*Post {
	if x != nil {
		return x.Posts
	}
	return nil
}

func (x *PostsFetchVirtualByKeywordsLatestResponse) GetPageState() []byte {
	if x != nil {
		return x.PageState
	}
	return nil
}

// POSTS FETCH BY KEYWORD
type PostsFetchByKeywordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Keyword    string `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword,omitempty"`
	IsVirtual  bool   `protobuf:"varint,3,opt,name=is_virtual,json=isVirtual,proto3" json:"is_virtual,omitempty"`
	PagesState []byte `protobuf:"bytes,4,opt,name=pages_state,json=pagesState,proto3" json:"pages_state,omitempty"`
}

func (x *PostsFetchByKeywordRequest) Reset() {
	*x = PostsFetchByKeywordRequest{}
	mi := &file_grpc_proto_social_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostsFetchByKeywordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostsFetchByKeywordRequest) ProtoMessage() {}

func (x *PostsFetchByKeywordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostsFetchByKeywordRequest.ProtoReflect.Descriptor instead.
func (*PostsFetchByKeywordRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{12}
}

func (x *PostsFetchByKeywordRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PostsFetchByKeywordRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *PostsFetchByKeywordRequest) GetIsVirtual() bool {
	if x != nil {
		return x.IsVirtual
	}
	return false
}

func (x *PostsFetchByKeywordRequest) GetPagesState() []byte {
	if x != nil {
		return x.PagesState
	}
	return nil
}

type PostsFetchByKeywordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Posts     []*Post `protobuf:"bytes,1,rep,name=posts,proto3" json:"posts,omitempty"`
	PageState []byte  `protobuf:"bytes,2,opt,name=page_state,json=pageState,proto3" json:"page_state,omitempty"`
}

func (x *PostsFetchByKeywordResponse) Reset() {
	*x = PostsFetchByKeywordResponse{}
	mi := &file_grpc_proto_social_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostsFetchByKeywordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostsFetchByKeywordResponse) ProtoMessage() {}

func (x *PostsFetchByKeywordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostsFetchByKeywordResponse.ProtoReflect.Descriptor instead.
func (*PostsFetchByKeywordResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{13}
}

func (x *PostsFetchByKeywordResponse) GetPosts() []*Post {
	if x != nil {
		return x.Posts
	}
	return nil
}

func (x *PostsFetchByKeywordResponse) GetPageState() []byte {
	if x != nil {
		return x.PageState
	}
	return nil
}

// POSTS FETCH BY KEYWORDS
type PostsFetchByKeywordsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string            `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Keywords    []string          `protobuf:"bytes,2,rep,name=keywords,proto3" json:"keywords,omitempty"`
	IsVirtual   bool              `protobuf:"varint,3,opt,name=is_virtual,json=isVirtual,proto3" json:"is_virtual,omitempty"`
	PagesStates map[string][]byte `protobuf:"bytes,4,rep,name=pages_states,json=pagesStates,proto3" json:"pages_states,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PostsFetchByKeywordsRequest) Reset() {
	*x = PostsFetchByKeywordsRequest{}
	mi := &file_grpc_proto_social_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostsFetchByKeywordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostsFetchByKeywordsRequest) ProtoMessage() {}

func (x *PostsFetchByKeywordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostsFetchByKeywordsRequest.ProtoReflect.Descriptor instead.
func (*PostsFetchByKeywordsRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{14}
}

func (x *PostsFetchByKeywordsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PostsFetchByKeywordsRequest) GetKeywords() []string {
	if x != nil {
		return x.Keywords
	}
	return nil
}

func (x *PostsFetchByKeywordsRequest) GetIsVirtual() bool {
	if x != nil {
		return x.IsVirtual
	}
	return false
}

func (x *PostsFetchByKeywordsRequest) GetPagesStates() map[string][]byte {
	if x != nil {
		return x.PagesStates
	}
	return nil
}

type PostsFetchByKeywordsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Posts       []*Post           `protobuf:"bytes,1,rep,name=posts,proto3" json:"posts,omitempty"`
	PagesStates map[string][]byte `protobuf:"bytes,2,rep,name=pages_states,json=pagesStates,proto3" json:"pages_states,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PostsFetchByKeywordsResponse) Reset() {
	*x = PostsFetchByKeywordsResponse{}
	mi := &file_grpc_proto_social_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostsFetchByKeywordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostsFetchByKeywordsResponse) ProtoMessage() {}

func (x *PostsFetchByKeywordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostsFetchByKeywordsResponse.ProtoReflect.Descriptor instead.
func (*PostsFetchByKeywordsResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{15}
}

func (x *PostsFetchByKeywordsResponse) GetPosts() []*Post {
	if x != nil {
		return x.Posts
	}
	return nil
}

func (x *PostsFetchByKeywordsResponse) GetPagesStates() map[string][]byte {
	if x != nil {
		return x.PagesStates
	}
	return nil
}

// ---------------------------------------------------------------------------------------------------------------------
// POSTS FETCH ALL KEYWORDS
type PostsFetchAllKeywordsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageState []byte `protobuf:"bytes,1,opt,name=page_state,json=pageState,proto3" json:"page_state,omitempty"`
}

func (x *PostsFetchAllKeywordsRequest) Reset() {
	*x = PostsFetchAllKeywordsRequest{}
	mi := &file_grpc_proto_social_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostsFetchAllKeywordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostsFetchAllKeywordsRequest) ProtoMessage() {}

func (x *PostsFetchAllKeywordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostsFetchAllKeywordsRequest.ProtoReflect.Descriptor instead.
func (*PostsFetchAllKeywordsRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{16}
}

func (x *PostsFetchAllKeywordsRequest) GetPageState() []byte {
	if x != nil {
		return x.PageState
	}
	return nil
}

type PostsFetchAllKeywordsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keywords  []string `protobuf:"bytes,1,rep,name=keywords,proto3" json:"keywords,omitempty"`
	PageState []byte   `protobuf:"bytes,2,opt,name=page_state,json=pageState,proto3" json:"page_state,omitempty"`
}

func (x *PostsFetchAllKeywordsResponse) Reset() {
	*x = PostsFetchAllKeywordsResponse{}
	mi := &file_grpc_proto_social_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostsFetchAllKeywordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostsFetchAllKeywordsResponse) ProtoMessage() {}

func (x *PostsFetchAllKeywordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostsFetchAllKeywordsResponse.ProtoReflect.Descriptor instead.
func (*PostsFetchAllKeywordsResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{17}
}

func (x *PostsFetchAllKeywordsResponse) GetKeywords() []string {
	if x != nil {
		return x.Keywords
	}
	return nil
}

func (x *PostsFetchAllKeywordsResponse) GetPageState() []byte {
	if x != nil {
		return x.PageState
	}
	return nil
}

// ---------------------------------------------------------------------------------------------------------------------
// POST TOGGLE LIKE
type PostToggleLikeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId string `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *PostToggleLikeRequest) Reset() {
	*x = PostToggleLikeRequest{}
	mi := &file_grpc_proto_social_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostToggleLikeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostToggleLikeRequest) ProtoMessage() {}

func (x *PostToggleLikeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostToggleLikeRequest.ProtoReflect.Descriptor instead.
func (*PostToggleLikeRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{18}
}

func (x *PostToggleLikeRequest) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *PostToggleLikeRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type PostToggleLikeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PostToggleLikeResponse) Reset() {
	*x = PostToggleLikeResponse{}
	mi := &file_grpc_proto_social_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostToggleLikeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostToggleLikeResponse) ProtoMessage() {}

func (x *PostToggleLikeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostToggleLikeResponse.ProtoReflect.Descriptor instead.
func (*PostToggleLikeResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{19}
}

// POST FETCH LIKES
type PostFetchLikesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId    string `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	PageState []byte `protobuf:"bytes,2,opt,name=page_state,json=pageState,proto3" json:"page_state,omitempty"`
}

func (x *PostFetchLikesRequest) Reset() {
	*x = PostFetchLikesRequest{}
	mi := &file_grpc_proto_social_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostFetchLikesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostFetchLikesRequest) ProtoMessage() {}

func (x *PostFetchLikesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostFetchLikesRequest.ProtoReflect.Descriptor instead.
func (*PostFetchLikesRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{20}
}

func (x *PostFetchLikesRequest) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *PostFetchLikesRequest) GetPageState() []byte {
	if x != nil {
		return x.PageState
	}
	return nil
}

type PostFetchLikesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Likes     []*PostLike `protobuf:"bytes,1,rep,name=likes,proto3" json:"likes,omitempty"`
	PageState []byte      `protobuf:"bytes,2,opt,name=page_state,json=pageState,proto3" json:"page_state,omitempty"`
}

func (x *PostFetchLikesResponse) Reset() {
	*x = PostFetchLikesResponse{}
	mi := &file_grpc_proto_social_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostFetchLikesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostFetchLikesResponse) ProtoMessage() {}

func (x *PostFetchLikesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostFetchLikesResponse.ProtoReflect.Descriptor instead.
func (*PostFetchLikesResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{21}
}

func (x *PostFetchLikesResponse) GetLikes() []*PostLike {
	if x != nil {
		return x.Likes
	}
	return nil
}

func (x *PostFetchLikesResponse) GetPageState() []byte {
	if x != nil {
		return x.PageState
	}
	return nil
}

// POST FETCH VIEWS
type PostFetchViewsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId    string `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	PageState []byte `protobuf:"bytes,2,opt,name=page_state,json=pageState,proto3" json:"page_state,omitempty"`
}

func (x *PostFetchViewsRequest) Reset() {
	*x = PostFetchViewsRequest{}
	mi := &file_grpc_proto_social_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostFetchViewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostFetchViewsRequest) ProtoMessage() {}

func (x *PostFetchViewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostFetchViewsRequest.ProtoReflect.Descriptor instead.
func (*PostFetchViewsRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{22}
}

func (x *PostFetchViewsRequest) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *PostFetchViewsRequest) GetPageState() []byte {
	if x != nil {
		return x.PageState
	}
	return nil
}

type PostFetchViewsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Views     []*PostView `protobuf:"bytes,1,rep,name=views,proto3" json:"views,omitempty"`
	PageState []byte      `protobuf:"bytes,2,opt,name=page_state,json=pageState,proto3" json:"page_state,omitempty"`
}

func (x *PostFetchViewsResponse) Reset() {
	*x = PostFetchViewsResponse{}
	mi := &file_grpc_proto_social_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostFetchViewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostFetchViewsResponse) ProtoMessage() {}

func (x *PostFetchViewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostFetchViewsResponse.ProtoReflect.Descriptor instead.
func (*PostFetchViewsResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{23}
}

func (x *PostFetchViewsResponse) GetViews() []*PostView {
	if x != nil {
		return x.Views
	}
	return nil
}

func (x *PostFetchViewsResponse) GetPageState() []byte {
	if x != nil {
		return x.PageState
	}
	return nil
}

// ---------------------------------------------------------------------------------------------------------------------
// POST COMMENT CREATE
type PostCommentCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comment *PostComment `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *PostCommentCreateRequest) Reset() {
	*x = PostCommentCreateRequest{}
	mi := &file_grpc_proto_social_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostCommentCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCommentCreateRequest) ProtoMessage() {}

func (x *PostCommentCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCommentCreateRequest.ProtoReflect.Descriptor instead.
func (*PostCommentCreateRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{24}
}

func (x *PostCommentCreateRequest) GetComment() *PostComment {
	if x != nil {
		return x.Comment
	}
	return nil
}

type PostCommentCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comment *PostComment `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *PostCommentCreateResponse) Reset() {
	*x = PostCommentCreateResponse{}
	mi := &file_grpc_proto_social_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostCommentCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCommentCreateResponse) ProtoMessage() {}

func (x *PostCommentCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCommentCreateResponse.ProtoReflect.Descriptor instead.
func (*PostCommentCreateResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{25}
}

func (x *PostCommentCreateResponse) GetComment() *PostComment {
	if x != nil {
		return x.Comment
	}
	return nil
}

// POST COMMENT FETCH
type PostCommentsFetchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId    string `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	PageState []byte `protobuf:"bytes,2,opt,name=page_state,json=pageState,proto3" json:"page_state,omitempty"`
}

func (x *PostCommentsFetchRequest) Reset() {
	*x = PostCommentsFetchRequest{}
	mi := &file_grpc_proto_social_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostCommentsFetchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCommentsFetchRequest) ProtoMessage() {}

func (x *PostCommentsFetchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCommentsFetchRequest.ProtoReflect.Descriptor instead.
func (*PostCommentsFetchRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{26}
}

func (x *PostCommentsFetchRequest) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *PostCommentsFetchRequest) GetPageState() []byte {
	if x != nil {
		return x.PageState
	}
	return nil
}

type PostCommentsFetchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comments  []*PostComment `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	PageState []byte         `protobuf:"bytes,2,opt,name=page_state,json=pageState,proto3" json:"page_state,omitempty"`
}

func (x *PostCommentsFetchResponse) Reset() {
	*x = PostCommentsFetchResponse{}
	mi := &file_grpc_proto_social_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostCommentsFetchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCommentsFetchResponse) ProtoMessage() {}

func (x *PostCommentsFetchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCommentsFetchResponse.ProtoReflect.Descriptor instead.
func (*PostCommentsFetchResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{27}
}

func (x *PostCommentsFetchResponse) GetComments() []*PostComment {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *PostCommentsFetchResponse) GetPageState() []byte {
	if x != nil {
		return x.PageState
	}
	return nil
}

// POST COMMENT DELETE
type PostCommentDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentId string `protobuf:"bytes,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	PostId    string `protobuf:"bytes,2,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	UserId    string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *PostCommentDeleteRequest) Reset() {
	*x = PostCommentDeleteRequest{}
	mi := &file_grpc_proto_social_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostCommentDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCommentDeleteRequest) ProtoMessage() {}

func (x *PostCommentDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCommentDeleteRequest.ProtoReflect.Descriptor instead.
func (*PostCommentDeleteRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{28}
}

func (x *PostCommentDeleteRequest) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

func (x *PostCommentDeleteRequest) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *PostCommentDeleteRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type PostCommentDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PostCommentDeleteResponse) Reset() {
	*x = PostCommentDeleteResponse{}
	mi := &file_grpc_proto_social_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostCommentDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCommentDeleteResponse) ProtoMessage() {}

func (x *PostCommentDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCommentDeleteResponse.ProtoReflect.Descriptor instead.
func (*PostCommentDeleteResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{29}
}

// ---------------------------------------------------------------------------------------------------------------------
// FOLLOW CREATE
type FollowCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FollowerId  string `protobuf:"bytes,1,opt,name=follower_id,json=followerId,proto3" json:"follower_id,omitempty"`
	FollowingId string `protobuf:"bytes,2,opt,name=following_id,json=followingId,proto3" json:"following_id,omitempty"`
}

func (x *FollowCreateRequest) Reset() {
	*x = FollowCreateRequest{}
	mi := &file_grpc_proto_social_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FollowCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowCreateRequest) ProtoMessage() {}

func (x *FollowCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowCreateRequest.ProtoReflect.Descriptor instead.
func (*FollowCreateRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{30}
}

func (x *FollowCreateRequest) GetFollowerId() string {
	if x != nil {
		return x.FollowerId
	}
	return ""
}

func (x *FollowCreateRequest) GetFollowingId() string {
	if x != nil {
		return x.FollowingId
	}
	return ""
}

type FollowCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FollowCreateResponse) Reset() {
	*x = FollowCreateResponse{}
	mi := &file_grpc_proto_social_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FollowCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowCreateResponse) ProtoMessage() {}

func (x *FollowCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowCreateResponse.ProtoReflect.Descriptor instead.
func (*FollowCreateResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{31}
}

// FOLLOW DELETE
type FollowDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FollowerId  string `protobuf:"bytes,1,opt,name=follower_id,json=followerId,proto3" json:"follower_id,omitempty"`
	FollowingId string `protobuf:"bytes,2,opt,name=following_id,json=followingId,proto3" json:"following_id,omitempty"`
}

func (x *FollowDeleteRequest) Reset() {
	*x = FollowDeleteRequest{}
	mi := &file_grpc_proto_social_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FollowDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowDeleteRequest) ProtoMessage() {}

func (x *FollowDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowDeleteRequest.ProtoReflect.Descriptor instead.
func (*FollowDeleteRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{32}
}

func (x *FollowDeleteRequest) GetFollowerId() string {
	if x != nil {
		return x.FollowerId
	}
	return ""
}

func (x *FollowDeleteRequest) GetFollowingId() string {
	if x != nil {
		return x.FollowingId
	}
	return ""
}

type FollowDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FollowDeleteResponse) Reset() {
	*x = FollowDeleteResponse{}
	mi := &file_grpc_proto_social_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FollowDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowDeleteResponse) ProtoMessage() {}

func (x *FollowDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowDeleteResponse.ProtoReflect.Descriptor instead.
func (*FollowDeleteResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{33}
}

// FOLLOWINGS FETCH
type FollowingsFetchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PageState []byte `protobuf:"bytes,2,opt,name=page_state,json=pageState,proto3" json:"page_state,omitempty"`
}

func (x *FollowingsFetchRequest) Reset() {
	*x = FollowingsFetchRequest{}
	mi := &file_grpc_proto_social_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FollowingsFetchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowingsFetchRequest) ProtoMessage() {}

func (x *FollowingsFetchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowingsFetchRequest.ProtoReflect.Descriptor instead.
func (*FollowingsFetchRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{34}
}

func (x *FollowingsFetchRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FollowingsFetchRequest) GetPageState() []byte {
	if x != nil {
		return x.PageState
	}
	return nil
}

type FollowingsFetchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Followings []*FollowsRender `protobuf:"bytes,1,rep,name=followings,proto3" json:"followings,omitempty"`
	PageState  []byte           `protobuf:"bytes,2,opt,name=page_state,json=pageState,proto3" json:"page_state,omitempty"`
}

func (x *FollowingsFetchResponse) Reset() {
	*x = FollowingsFetchResponse{}
	mi := &file_grpc_proto_social_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FollowingsFetchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowingsFetchResponse) ProtoMessage() {}

func (x *FollowingsFetchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowingsFetchResponse.ProtoReflect.Descriptor instead.
func (*FollowingsFetchResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{35}
}

func (x *FollowingsFetchResponse) GetFollowings() []*FollowsRender {
	if x != nil {
		return x.Followings
	}
	return nil
}

func (x *FollowingsFetchResponse) GetPageState() []byte {
	if x != nil {
		return x.PageState
	}
	return nil
}

// FOLLOWERS FETCH
type FollowersFetchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PageState []byte `protobuf:"bytes,2,opt,name=page_state,json=pageState,proto3" json:"page_state,omitempty"`
}

func (x *FollowersFetchRequest) Reset() {
	*x = FollowersFetchRequest{}
	mi := &file_grpc_proto_social_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FollowersFetchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowersFetchRequest) ProtoMessage() {}

func (x *FollowersFetchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowersFetchRequest.ProtoReflect.Descriptor instead.
func (*FollowersFetchRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{36}
}

func (x *FollowersFetchRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FollowersFetchRequest) GetPageState() []byte {
	if x != nil {
		return x.PageState
	}
	return nil
}

type FollowersFetchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Followers []*FollowsRender `protobuf:"bytes,1,rep,name=followers,proto3" json:"followers,omitempty"`
	PageState []byte           `protobuf:"bytes,2,opt,name=page_state,json=pageState,proto3" json:"page_state,omitempty"`
}

func (x *FollowersFetchResponse) Reset() {
	*x = FollowersFetchResponse{}
	mi := &file_grpc_proto_social_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FollowersFetchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowersFetchResponse) ProtoMessage() {}

func (x *FollowersFetchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowersFetchResponse.ProtoReflect.Descriptor instead.
func (*FollowersFetchResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{37}
}

func (x *FollowersFetchResponse) GetFollowers() []*FollowsRender {
	if x != nil {
		return x.Followers
	}
	return nil
}

func (x *FollowersFetchResponse) GetPageState() []byte {
	if x != nil {
		return x.PageState
	}
	return nil
}

// FOLLOWS COUNTER FETCH
type FollowsCounterFetchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *FollowsCounterFetchRequest) Reset() {
	*x = FollowsCounterFetchRequest{}
	mi := &file_grpc_proto_social_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FollowsCounterFetchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowsCounterFetchRequest) ProtoMessage() {}

func (x *FollowsCounterFetchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowsCounterFetchRequest.ProtoReflect.Descriptor instead.
func (*FollowsCounterFetchRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{38}
}

func (x *FollowsCounterFetchRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type FollowsCounterFetchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CounterFollowers  int64 `protobuf:"varint,1,opt,name=counter_followers,json=counterFollowers,proto3" json:"counter_followers,omitempty"`
	CounterFollowings int64 `protobuf:"varint,2,opt,name=counter_followings,json=counterFollowings,proto3" json:"counter_followings,omitempty"`
}

func (x *FollowsCounterFetchResponse) Reset() {
	*x = FollowsCounterFetchResponse{}
	mi := &file_grpc_proto_social_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FollowsCounterFetchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowsCounterFetchResponse) ProtoMessage() {}

func (x *FollowsCounterFetchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowsCounterFetchResponse.ProtoReflect.Descriptor instead.
func (*FollowsCounterFetchResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{39}
}

func (x *FollowsCounterFetchResponse) GetCounterFollowers() int64 {
	if x != nil {
		return x.CounterFollowers
	}
	return 0
}

func (x *FollowsCounterFetchResponse) GetCounterFollowings() int64 {
	if x != nil {
		return x.CounterFollowings
	}
	return 0
}

type Post struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId        string       `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	UserTargetId  string       `protobuf:"bytes,2,opt,name=user_target_id,json=userTargetId,proto3" json:"user_target_id,omitempty"`
	UserCreatorId string       `protobuf:"bytes,3,opt,name=user_creator_id,json=userCreatorId,proto3" json:"user_creator_id,omitempty"`
	CreatedAt     string       `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Private       bool         `protobuf:"varint,5,opt,name=private,proto3" json:"private,omitempty"`
	PrivateType   string       `protobuf:"bytes,6,opt,name=private_type,json=privateType,proto3" json:"private_type,omitempty"` // "only_me", "only_to_target", "to_a_public"
	ContentText   string       `protobuf:"bytes,7,opt,name=content_text,json=contentText,proto3" json:"content_text,omitempty"`
	ContentStatus string       `protobuf:"bytes,8,opt,name=content_status,json=contentStatus,proto3" json:"content_status,omitempty"`
	LinkUrl       string       `protobuf:"bytes,9,opt,name=link_url,json=linkUrl,proto3" json:"link_url,omitempty"`
	Keywords      []string     `protobuf:"bytes,10,rep,name=keywords,proto3" json:"keywords,omitempty"`
	Media         []*Media     `protobuf:"bytes,11,rep,name=media,proto3" json:"media,omitempty"`
	Counters      *PostCounter `protobuf:"bytes,12,opt,name=counters,proto3" json:"counters,omitempty"`
	IsLiked       bool         `protobuf:"varint,13,opt,name=is_liked,json=isLiked,proto3" json:"is_liked,omitempty"`
	IsVirtual     bool         `protobuf:"varint,14,opt,name=is_virtual,json=isVirtual,proto3" json:"is_virtual,omitempty"`
	Username      string       `protobuf:"bytes,15,opt,name=username,proto3" json:"username,omitempty"`
	AvatarUrl     string       `protobuf:"bytes,16,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	PostType      string       `protobuf:"bytes,17,opt,name=post_type,json=postType,proto3" json:"post_type,omitempty"` // "normal", "promo"
}

func (x *Post) Reset() {
	*x = Post{}
	mi := &file_grpc_proto_social_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Post) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Post) ProtoMessage() {}

func (x *Post) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Post.ProtoReflect.Descriptor instead.
func (*Post) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{40}
}

func (x *Post) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *Post) GetUserTargetId() string {
	if x != nil {
		return x.UserTargetId
	}
	return ""
}

func (x *Post) GetUserCreatorId() string {
	if x != nil {
		return x.UserCreatorId
	}
	return ""
}

func (x *Post) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Post) GetPrivate() bool {
	if x != nil {
		return x.Private
	}
	return false
}

func (x *Post) GetPrivateType() string {
	if x != nil {
		return x.PrivateType
	}
	return ""
}

func (x *Post) GetContentText() string {
	if x != nil {
		return x.ContentText
	}
	return ""
}

func (x *Post) GetContentStatus() string {
	if x != nil {
		return x.ContentStatus
	}
	return ""
}

func (x *Post) GetLinkUrl() string {
	if x != nil {
		return x.LinkUrl
	}
	return ""
}

func (x *Post) GetKeywords() []string {
	if x != nil {
		return x.Keywords
	}
	return nil
}

func (x *Post) GetMedia() []*Media {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *Post) GetCounters() *PostCounter {
	if x != nil {
		return x.Counters
	}
	return nil
}

func (x *Post) GetIsLiked() bool {
	if x != nil {
		return x.IsLiked
	}
	return false
}

func (x *Post) GetIsVirtual() bool {
	if x != nil {
		return x.IsVirtual
	}
	return false
}

func (x *Post) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Post) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *Post) GetPostType() string {
	if x != nil {
		return x.PostType
	}
	return ""
}

type PostCounter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId          string `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	CounterLikes    int64  `protobuf:"varint,2,opt,name=counter_likes,json=counterLikes,proto3" json:"counter_likes,omitempty"`
	CounterComments int64  `protobuf:"varint,3,opt,name=counter_comments,json=counterComments,proto3" json:"counter_comments,omitempty"`
	CounterViews    int64  `protobuf:"varint,4,opt,name=counter_views,json=counterViews,proto3" json:"counter_views,omitempty"`
}

func (x *PostCounter) Reset() {
	*x = PostCounter{}
	mi := &file_grpc_proto_social_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostCounter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCounter) ProtoMessage() {}

func (x *PostCounter) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCounter.ProtoReflect.Descriptor instead.
func (*PostCounter) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{41}
}

func (x *PostCounter) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *PostCounter) GetCounterLikes() int64 {
	if x != nil {
		return x.CounterLikes
	}
	return 0
}

func (x *PostCounter) GetCounterComments() int64 {
	if x != nil {
		return x.CounterComments
	}
	return 0
}

func (x *PostCounter) GetCounterViews() int64 {
	if x != nil {
		return x.CounterViews
	}
	return 0
}

type PostView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId    string `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	UserId    string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CreatedAt string `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *PostView) Reset() {
	*x = PostView{}
	mi := &file_grpc_proto_social_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostView) ProtoMessage() {}

func (x *PostView) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostView.ProtoReflect.Descriptor instead.
func (*PostView) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{42}
}

func (x *PostView) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *PostView) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PostView) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type PostLike struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId    string `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	UserId    string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CreatedAt string `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *PostLike) Reset() {
	*x = PostLike{}
	mi := &file_grpc_proto_social_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostLike) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostLike) ProtoMessage() {}

func (x *PostLike) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostLike.ProtoReflect.Descriptor instead.
func (*PostLike) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{43}
}

func (x *PostLike) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *PostLike) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PostLike) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type PostComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentId string `protobuf:"bytes,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	PostId    string `protobuf:"bytes,2,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	AuthorId  string `protobuf:"bytes,3,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	CreatedAt string `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt string `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Content   string `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *PostComment) Reset() {
	*x = PostComment{}
	mi := &file_grpc_proto_social_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostComment) ProtoMessage() {}

func (x *PostComment) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostComment.ProtoReflect.Descriptor instead.
func (*PostComment) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{44}
}

func (x *PostComment) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

func (x *PostComment) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *PostComment) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

func (x *PostComment) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *PostComment) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *PostComment) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// ---------------------------------------------------------------------------------------------------------------------
type CommentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentCommentId string `protobuf:"bytes,1,opt,name=parent_comment_id,json=parentCommentId,proto3" json:"parent_comment_id,omitempty"`
	ReplyId         string `protobuf:"bytes,2,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`
	PostId          string `protobuf:"bytes,3,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	AuthorId        string `protobuf:"bytes,4,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	CreatedAt       string `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Content         string `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *CommentReply) Reset() {
	*x = CommentReply{}
	mi := &file_grpc_proto_social_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentReply) ProtoMessage() {}

func (x *CommentReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentReply.ProtoReflect.Descriptor instead.
func (*CommentReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{45}
}

func (x *CommentReply) GetParentCommentId() string {
	if x != nil {
		return x.ParentCommentId
	}
	return ""
}

func (x *CommentReply) GetReplyId() string {
	if x != nil {
		return x.ReplyId
	}
	return ""
}

func (x *CommentReply) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *CommentReply) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

func (x *CommentReply) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CommentReply) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type CommentLike struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentId string `protobuf:"bytes,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	UserId    string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	LikedAt   string `protobuf:"bytes,3,opt,name=liked_at,json=likedAt,proto3" json:"liked_at,omitempty"`
}

func (x *CommentLike) Reset() {
	*x = CommentLike{}
	mi := &file_grpc_proto_social_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentLike) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentLike) ProtoMessage() {}

func (x *CommentLike) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentLike.ProtoReflect.Descriptor instead.
func (*CommentLike) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{46}
}

func (x *CommentLike) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

func (x *CommentLike) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CommentLike) GetLikedAt() string {
	if x != nil {
		return x.LikedAt
	}
	return ""
}

// Response for frontend
type FollowsRender struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserType  string `protobuf:"bytes,2,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`
	UserRole  string `protobuf:"bytes,3,opt,name=user_role,json=userRole,proto3" json:"user_role,omitempty"`
	Username  string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	AvatarUrl string `protobuf:"bytes,5,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	CreatedAt string `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Status    string `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *FollowsRender) Reset() {
	*x = FollowsRender{}
	mi := &file_grpc_proto_social_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FollowsRender) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowsRender) ProtoMessage() {}

func (x *FollowsRender) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowsRender.ProtoReflect.Descriptor instead.
func (*FollowsRender) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{47}
}

func (x *FollowsRender) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FollowsRender) GetUserType() string {
	if x != nil {
		return x.UserType
	}
	return ""
}

func (x *FollowsRender) GetUserRole() string {
	if x != nil {
		return x.UserRole
	}
	return ""
}

func (x *FollowsRender) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *FollowsRender) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *FollowsRender) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *FollowsRender) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// ---------------------------------------------------------------------------------------------------------------------
type Follow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FollowerId  string `protobuf:"bytes,1,opt,name=follower_id,json=followerId,proto3" json:"follower_id,omitempty"`
	FollowingId string `protobuf:"bytes,2,opt,name=following_id,json=followingId,proto3" json:"following_id,omitempty"`
	CreatedAt   string `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Status      string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Follow) Reset() {
	*x = Follow{}
	mi := &file_grpc_proto_social_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Follow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Follow) ProtoMessage() {}

func (x *Follow) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_social_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Follow.ProtoReflect.Descriptor instead.
func (*Follow) Descriptor() ([]byte, []int) {
	return file_grpc_proto_social_proto_rawDescGZIP(), []int{48}
}

func (x *Follow) GetFollowerId() string {
	if x != nil {
		return x.FollowerId
	}
	return ""
}

func (x *Follow) GetFollowingId() string {
	if x != nil {
		return x.FollowingId
	}
	return ""
}

func (x *Follow) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Follow) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_grpc_proto_social_proto protoreflect.FileDescriptor

var file_grpc_proto_social_proto_rawDesc = []byte{
	0x0a, 0x17, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x73, 0x6f, 0x63, 0x69, 0x61,
	0x6c, 0x1a, 0x16, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x16, 0x0a, 0x14, 0x50, 0x69, 0x6e,
	0x67, 0x41, 0x70, 0x69, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x2f, 0x0a, 0x15, 0x50, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x69, 0x53, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x35, 0x0a, 0x11, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50,
	0x6f, 0x73, 0x74, 0x52, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x22, 0x36, 0x0a, 0x12, 0x50, 0x6f, 0x73,
	0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x20, 0x0a, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x04, 0x70, 0x6f, 0x73,
	0x74, 0x22, 0x83, 0x01, 0x0a, 0x19, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x24, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x56,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x22, 0x40, 0x0a, 0x1a, 0x50, 0x6f, 0x73, 0x74, 0x73,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f,
	0x73, 0x74, 0x52, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x22, 0x64, 0x0a, 0x11, 0x50, 0x6f, 0x73,
	0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x22,
	0x14, 0x0a, 0x12, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf4, 0x01, 0x0a, 0x1e, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x12, 0x5a, 0x0a, 0x0c, 0x70, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0b, 0x70, 0x61, 0x67, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x1a, 0x3e, 0x0a, 0x10,
	0x50, 0x61, 0x67, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe2, 0x01, 0x0a,
	0x1f, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x56, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x22, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x05, 0x70,
	0x6f, 0x73, 0x74, 0x73, 0x12, 0x5b, 0x0a, 0x0c, 0x70, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x73, 0x1a, 0x3e, 0x0a, 0x10, 0x50, 0x61, 0x67, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x9e, 0x02, 0x0a, 0x28, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x72, 0x65, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x4b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x31, 0x0a, 0x14, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65,
	0x64, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x72, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d,
	0x65, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0f, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x65, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x22, 0x6e, 0x0a, 0x29, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x22, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x05, 0x70, 0x6f,
	0x73, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x22, 0x8f, 0x01, 0x0a, 0x1a, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x73, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x22, 0x60, 0x0a, 0x1b, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x8a, 0x02, 0x0a, 0x1b, 0x50, 0x6f, 0x73, 0x74, 0x73,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x12, 0x57, 0x0a, 0x0c, 0x70, 0x61,
	0x67, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x34, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x73, 0x1a, 0x3e, 0x0a, 0x10, 0x50, 0x61, 0x67, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xdc, 0x01, 0x0a, 0x1c, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73,
	0x74, 0x52, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x58, 0x0a, 0x0c, 0x70, 0x61, 0x67, 0x65,
	0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35,
	0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x73, 0x1a, 0x3e, 0x0a, 0x10, 0x50, 0x61, 0x67, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x3d, 0x0a, 0x1c, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x41, 0x6c, 0x6c, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x22, 0x5a, 0x0a, 0x1d, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41,
	0x6c, 0x6c, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x49, 0x0a,
	0x15, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x50, 0x6f, 0x73, 0x74,
	0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x4f, 0x0a, 0x15, 0x50, 0x6f, 0x73, 0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4c,
	0x69, 0x6b, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70,
	0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x22, 0x5f, 0x0a, 0x16, 0x50, 0x6f, 0x73, 0x74, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x4c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a,
	0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x05,
	0x6c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x22, 0x4f, 0x0a, 0x15, 0x50, 0x6f, 0x73, 0x74, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x56, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x5f, 0x0a, 0x16, 0x50, 0x6f, 0x73, 0x74, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x56, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x26, 0x0a, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x56, 0x69, 0x65, 0x77,
	0x52, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x49, 0x0a, 0x18, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x22, 0x4a, 0x0a, 0x19, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x52, 0x0a,
	0x18, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x22, 0x6b, 0x0a, 0x19, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x6b,
	0x0a, 0x18, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x1b, 0x0a, 0x19, 0x50,
	0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x59, 0x0a, 0x13, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e,
	0x67, 0x49, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x59, 0x0a, 0x13, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x50,
	0x0a, 0x16, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x73, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x22, 0x6f, 0x0a, 0x17, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x73, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x73,
	0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x22, 0x4f, 0x0a, 0x15, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x22, 0x6c, 0x0a, 0x16, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x09,
	0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x73,
	0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x09, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x22, 0x35, 0x0a, 0x1a, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x1b, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x10, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x72, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x11, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e,
	0x67, 0x73, 0x22, 0xb1, 0x04, 0x0a, 0x04, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70,
	0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73,
	0x65, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x69, 0x6e, 0x6b,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x6e, 0x6b,
	0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12,
	0x22, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x05, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x12, 0x2f, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50,
	0x6f, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x64,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x73,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f,
	0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x9b, 0x01, 0x0a, 0x0b, 0x50, 0x6f, 0x73, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x4c,
	0x69, 0x6b, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x56,
	0x69, 0x65, 0x77, 0x73, 0x22, 0x5b, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x74, 0x56, 0x69, 0x65, 0x77,
	0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x5b, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xba,
	0x01, 0x0a, 0x0b, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xc4, 0x01, 0x0a, 0x0c,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2a, 0x0a, 0x11,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x22, 0x60, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6b,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x69, 0x6b,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x6b,
	0x65, 0x64, 0x41, 0x74, 0x22, 0xd4, 0x01, 0x0a, 0x0d, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x73,
	0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x06,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x32, 0x80, 0x0e, 0x0a, 0x0d, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x0d, 0x50, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x69, 0x53, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x12, 0x1c, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x69,
	0x6e, 0x67, 0x41, 0x70, 0x69, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x69, 0x6e, 0x67,
	0x41, 0x70, 0x69, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x43, 0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x19, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x12, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x21, 0x2e, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x12, 0x19, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x17, 0x50, 0x6f, 0x73, 0x74,
	0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x12, 0x26, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73,
	0x74, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x56,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x21, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x12, 0x30, 0x2e, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x4c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5e, 0x0a, 0x13, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x42, 0x79, 0x4b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x22, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x42, 0x79,
	0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x61, 0x0a, 0x14, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x42, 0x79, 0x4b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x23, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x2e, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x42, 0x79, 0x4b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x42, 0x79, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x64, 0x0a, 0x15, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x41, 0x6c, 0x6c, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x24, 0x2e, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41,
	0x6c, 0x6c, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x73,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0e, 0x50, 0x6f, 0x73, 0x74,
	0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x1d, 0x2e, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x4c, 0x69,
	0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x4c, 0x69, 0x6b,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0e, 0x50, 0x6f, 0x73,
	0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4c, 0x69,
	0x6b, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x6b,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0e, 0x50, 0x6f,
	0x73, 0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x56, 0x69, 0x65, 0x77, 0x73, 0x12, 0x1d, 0x2e, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x56,
	0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x56, 0x69,
	0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x11, 0x50,
	0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x20, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x11, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x12, 0x20, 0x2e, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x58, 0x0a, 0x11, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x20, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f,
	0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x46, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x52, 0x0a, 0x0f, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x73, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x12, 0x1e, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x69, 0x6e, 0x67, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x69, 0x6e, 0x67, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x12, 0x1d, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x46, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x13, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x46, 0x65, 0x74, 0x63, 0x68, 0x12, 0x22, 0x2e, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x18, 0x5a, 0x16, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x3b, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_proto_social_proto_rawDescOnce sync.Once
	file_grpc_proto_social_proto_rawDescData = file_grpc_proto_social_proto_rawDesc
)

func file_grpc_proto_social_proto_rawDescGZIP() []byte {
	file_grpc_proto_social_proto_rawDescOnce.Do(func() {
		file_grpc_proto_social_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_proto_social_proto_rawDescData)
	})
	return file_grpc_proto_social_proto_rawDescData
}

var file_grpc_proto_social_proto_msgTypes = make([]protoimpl.MessageInfo, 53)
var file_grpc_proto_social_proto_goTypes = []any{
	(*PingApiSocialRequest)(nil),                      // 0: social.PingApiSocialRequest
	(*PingApiSocialResponse)(nil),                     // 1: social.PingApiSocialResponse
	(*PostCreateRequest)(nil),                         // 2: social.PostCreateRequest
	(*PostCreateResponse)(nil),                        // 3: social.PostCreateResponse
	(*PostsFetchByUserIDRequest)(nil),                 // 4: social.PostsFetchByUserIDRequest
	(*PostsFetchByUserIDResponse)(nil),                // 5: social.PostsFetchByUserIDResponse
	(*PostDeleteRequest)(nil),                         // 6: social.PostDeleteRequest
	(*PostDeleteResponse)(nil),                        // 7: social.PostDeleteResponse
	(*PostsFetchVirtualLatestRequest)(nil),            // 8: social.PostsFetchVirtualLatestRequest
	(*PostsFetchVirtualLatestResponse)(nil),           // 9: social.PostsFetchVirtualLatestResponse
	(*PostsFetchVirtualByKeywordsLatestRequest)(nil),  // 10: social.PostsFetchVirtualByKeywordsLatestRequest
	(*PostsFetchVirtualByKeywordsLatestResponse)(nil), // 11: social.PostsFetchVirtualByKeywordsLatestResponse
	(*PostsFetchByKeywordRequest)(nil),                // 12: social.PostsFetchByKeywordRequest
	(*PostsFetchByKeywordResponse)(nil),               // 13: social.PostsFetchByKeywordResponse
	(*PostsFetchByKeywordsRequest)(nil),               // 14: social.PostsFetchByKeywordsRequest
	(*PostsFetchByKeywordsResponse)(nil),              // 15: social.PostsFetchByKeywordsResponse
	(*PostsFetchAllKeywordsRequest)(nil),              // 16: social.PostsFetchAllKeywordsRequest
	(*PostsFetchAllKeywordsResponse)(nil),             // 17: social.PostsFetchAllKeywordsResponse
	(*PostToggleLikeRequest)(nil),                     // 18: social.PostToggleLikeRequest
	(*PostToggleLikeResponse)(nil),                    // 19: social.PostToggleLikeResponse
	(*PostFetchLikesRequest)(nil),                     // 20: social.PostFetchLikesRequest
	(*PostFetchLikesResponse)(nil),                    // 21: social.PostFetchLikesResponse
	(*PostFetchViewsRequest)(nil),                     // 22: social.PostFetchViewsRequest
	(*PostFetchViewsResponse)(nil),                    // 23: social.PostFetchViewsResponse
	(*PostCommentCreateRequest)(nil),                  // 24: social.PostCommentCreateRequest
	(*PostCommentCreateResponse)(nil),                 // 25: social.PostCommentCreateResponse
	(*PostCommentsFetchRequest)(nil),                  // 26: social.PostCommentsFetchRequest
	(*PostCommentsFetchResponse)(nil),                 // 27: social.PostCommentsFetchResponse
	(*PostCommentDeleteRequest)(nil),                  // 28: social.PostCommentDeleteRequest
	(*PostCommentDeleteResponse)(nil),                 // 29: social.PostCommentDeleteResponse
	(*FollowCreateRequest)(nil),                       // 30: social.FollowCreateRequest
	(*FollowCreateResponse)(nil),                      // 31: social.FollowCreateResponse
	(*FollowDeleteRequest)(nil),                       // 32: social.FollowDeleteRequest
	(*FollowDeleteResponse)(nil),                      // 33: social.FollowDeleteResponse
	(*FollowingsFetchRequest)(nil),                    // 34: social.FollowingsFetchRequest
	(*FollowingsFetchResponse)(nil),                   // 35: social.FollowingsFetchResponse
	(*FollowersFetchRequest)(nil),                     // 36: social.FollowersFetchRequest
	(*FollowersFetchResponse)(nil),                    // 37: social.FollowersFetchResponse
	(*FollowsCounterFetchRequest)(nil),                // 38: social.FollowsCounterFetchRequest
	(*FollowsCounterFetchResponse)(nil),               // 39: social.FollowsCounterFetchResponse
	(*Post)(nil),                                      // 40: social.Post
	(*PostCounter)(nil),                               // 41: social.PostCounter
	(*PostView)(nil),                                  // 42: social.PostView
	(*PostLike)(nil),                                  // 43: social.PostLike
	(*PostComment)(nil),                               // 44: social.PostComment
	(*CommentReply)(nil),                              // 45: social.CommentReply
	(*CommentLike)(nil),                               // 46: social.CommentLike
	(*FollowsRender)(nil),                             // 47: social.FollowsRender
	(*Follow)(nil),                                    // 48: social.Follow
	nil,                                               // 49: social.PostsFetchVirtualLatestRequest.PagesStatesEntry
	nil,                                               // 50: social.PostsFetchVirtualLatestResponse.PagesStatesEntry
	nil,                                               // 51: social.PostsFetchByKeywordsRequest.PagesStatesEntry
	nil,                                               // 52: social.PostsFetchByKeywordsResponse.PagesStatesEntry
	(*Media)(nil),                                     // 53: media.Media
}
var file_grpc_proto_social_proto_depIdxs = []int32{
	40, // 0: social.PostCreateRequest.post:type_name -> social.Post
	40, // 1: social.PostCreateResponse.post:type_name -> social.Post
	40, // 2: social.PostsFetchByUserIDResponse.posts:type_name -> social.Post
	49, // 3: social.PostsFetchVirtualLatestRequest.pages_states:type_name -> social.PostsFetchVirtualLatestRequest.PagesStatesEntry
	40, // 4: social.PostsFetchVirtualLatestResponse.posts:type_name -> social.Post
	50, // 5: social.PostsFetchVirtualLatestResponse.pages_states:type_name -> social.PostsFetchVirtualLatestResponse.PagesStatesEntry
	40, // 6: social.PostsFetchVirtualByKeywordsLatestResponse.posts:type_name -> social.Post
	40, // 7: social.PostsFetchByKeywordResponse.posts:type_name -> social.Post
	51, // 8: social.PostsFetchByKeywordsRequest.pages_states:type_name -> social.PostsFetchByKeywordsRequest.PagesStatesEntry
	40, // 9: social.PostsFetchByKeywordsResponse.posts:type_name -> social.Post
	52, // 10: social.PostsFetchByKeywordsResponse.pages_states:type_name -> social.PostsFetchByKeywordsResponse.PagesStatesEntry
	43, // 11: social.PostFetchLikesResponse.likes:type_name -> social.PostLike
	42, // 12: social.PostFetchViewsResponse.views:type_name -> social.PostView
	44, // 13: social.PostCommentCreateRequest.comment:type_name -> social.PostComment
	44, // 14: social.PostCommentCreateResponse.comment:type_name -> social.PostComment
	44, // 15: social.PostCommentsFetchResponse.comments:type_name -> social.PostComment
	47, // 16: social.FollowingsFetchResponse.followings:type_name -> social.FollowsRender
	47, // 17: social.FollowersFetchResponse.followers:type_name -> social.FollowsRender
	53, // 18: social.Post.media:type_name -> media.Media
	41, // 19: social.Post.counters:type_name -> social.PostCounter
	0,  // 20: social.SocialService.PingApiSocial:input_type -> social.PingApiSocialRequest
	2,  // 21: social.SocialService.PostCreate:input_type -> social.PostCreateRequest
	4,  // 22: social.SocialService.PostsFetchByUserID:input_type -> social.PostsFetchByUserIDRequest
	6,  // 23: social.SocialService.PostDelete:input_type -> social.PostDeleteRequest
	8,  // 24: social.SocialService.PostsFetchVirtualLatest:input_type -> social.PostsFetchVirtualLatestRequest
	10, // 25: social.SocialService.PostsFetchVirtualByKeywordsLatest:input_type -> social.PostsFetchVirtualByKeywordsLatestRequest
	12, // 26: social.SocialService.PostsFetchByKeyword:input_type -> social.PostsFetchByKeywordRequest
	14, // 27: social.SocialService.PostsFetchByKeywords:input_type -> social.PostsFetchByKeywordsRequest
	16, // 28: social.SocialService.PostsFetchAllKeywords:input_type -> social.PostsFetchAllKeywordsRequest
	18, // 29: social.SocialService.PostToggleLike:input_type -> social.PostToggleLikeRequest
	20, // 30: social.SocialService.PostFetchLikes:input_type -> social.PostFetchLikesRequest
	22, // 31: social.SocialService.PostFetchViews:input_type -> social.PostFetchViewsRequest
	24, // 32: social.SocialService.PostCommentCreate:input_type -> social.PostCommentCreateRequest
	26, // 33: social.SocialService.PostCommentsFetch:input_type -> social.PostCommentsFetchRequest
	28, // 34: social.SocialService.PostCommentDelete:input_type -> social.PostCommentDeleteRequest
	30, // 35: social.SocialService.FollowCreate:input_type -> social.FollowCreateRequest
	32, // 36: social.SocialService.FollowDelete:input_type -> social.FollowDeleteRequest
	34, // 37: social.SocialService.FollowingsFetch:input_type -> social.FollowingsFetchRequest
	36, // 38: social.SocialService.FollowersFetch:input_type -> social.FollowersFetchRequest
	38, // 39: social.SocialService.FollowsCounterFetch:input_type -> social.FollowsCounterFetchRequest
	1,  // 40: social.SocialService.PingApiSocial:output_type -> social.PingApiSocialResponse
	3,  // 41: social.SocialService.PostCreate:output_type -> social.PostCreateResponse
	5,  // 42: social.SocialService.PostsFetchByUserID:output_type -> social.PostsFetchByUserIDResponse
	7,  // 43: social.SocialService.PostDelete:output_type -> social.PostDeleteResponse
	9,  // 44: social.SocialService.PostsFetchVirtualLatest:output_type -> social.PostsFetchVirtualLatestResponse
	11, // 45: social.SocialService.PostsFetchVirtualByKeywordsLatest:output_type -> social.PostsFetchVirtualByKeywordsLatestResponse
	13, // 46: social.SocialService.PostsFetchByKeyword:output_type -> social.PostsFetchByKeywordResponse
	15, // 47: social.SocialService.PostsFetchByKeywords:output_type -> social.PostsFetchByKeywordsResponse
	17, // 48: social.SocialService.PostsFetchAllKeywords:output_type -> social.PostsFetchAllKeywordsResponse
	19, // 49: social.SocialService.PostToggleLike:output_type -> social.PostToggleLikeResponse
	21, // 50: social.SocialService.PostFetchLikes:output_type -> social.PostFetchLikesResponse
	23, // 51: social.SocialService.PostFetchViews:output_type -> social.PostFetchViewsResponse
	25, // 52: social.SocialService.PostCommentCreate:output_type -> social.PostCommentCreateResponse
	27, // 53: social.SocialService.PostCommentsFetch:output_type -> social.PostCommentsFetchResponse
	29, // 54: social.SocialService.PostCommentDelete:output_type -> social.PostCommentDeleteResponse
	31, // 55: social.SocialService.FollowCreate:output_type -> social.FollowCreateResponse
	33, // 56: social.SocialService.FollowDelete:output_type -> social.FollowDeleteResponse
	35, // 57: social.SocialService.FollowingsFetch:output_type -> social.FollowingsFetchResponse
	37, // 58: social.SocialService.FollowersFetch:output_type -> social.FollowersFetchResponse
	39, // 59: social.SocialService.FollowsCounterFetch:output_type -> social.FollowsCounterFetchResponse
	40, // [40:60] is the sub-list for method output_type
	20, // [20:40] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_grpc_proto_social_proto_init() }
func file_grpc_proto_social_proto_init() {
	if File_grpc_proto_social_proto != nil {
		return
	}
	file_grpc_proto_media_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_proto_social_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   53,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_proto_social_proto_goTypes,
		DependencyIndexes: file_grpc_proto_social_proto_depIdxs,
		MessageInfos:      file_grpc_proto_social_proto_msgTypes,
	}.Build()
	File_grpc_proto_social_proto = out.File
	file_grpc_proto_social_proto_rawDesc = nil
	file_grpc_proto_social_proto_goTypes = nil
	file_grpc_proto_social_proto_depIdxs = nil
}
