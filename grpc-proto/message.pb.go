// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: grpc-proto/message.proto

package grpc_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// --------------------------------------
// Ping API Message
type PingApiMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingApiMessageRequest) Reset() {
	*x = PingApiMessageRequest{}
	mi := &file_grpc_proto_message_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingApiMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingApiMessageRequest) ProtoMessage() {}

func (x *PingApiMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingApiMessageRequest.ProtoReflect.Descriptor instead.
func (*PingApiMessageRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{0}
}

type PingApiMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PingApiMessageResponse) Reset() {
	*x = PingApiMessageResponse{}
	mi := &file_grpc_proto_message_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingApiMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingApiMessageResponse) ProtoMessage() {}

func (x *PingApiMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingApiMessageResponse.ProtoReflect.Descriptor instead.
func (*PingApiMessageResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{1}
}

func (x *PingApiMessageResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// --------------------------------------
// PING Task Queue - BullMQ
type PingTasksQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingTasksQueueRequest) Reset() {
	*x = PingTasksQueueRequest{}
	mi := &file_grpc_proto_message_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingTasksQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingTasksQueueRequest) ProtoMessage() {}

func (x *PingTasksQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingTasksQueueRequest.ProtoReflect.Descriptor instead.
func (*PingTasksQueueRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{2}
}

type PingTasksQueueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PingTasksQueueResponse) Reset() {
	*x = PingTasksQueueResponse{}
	mi := &file_grpc_proto_message_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingTasksQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingTasksQueueResponse) ProtoMessage() {}

func (x *PingTasksQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingTasksQueueResponse.ProtoReflect.Descriptor instead.
func (*PingTasksQueueResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{3}
}

func (x *PingTasksQueueResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// --------------------------------------
// Customer Message
type CustomerMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conversation string   `protobuf:"bytes,1,opt,name=conversation,proto3" json:"conversation,omitempty"`
	Sender       string   `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	Recipient    []string `protobuf:"bytes,3,rep,name=recipient,proto3" json:"recipient,omitempty"`
	Content      string   `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *CustomerMessageRequest) Reset() {
	*x = CustomerMessageRequest{}
	mi := &file_grpc_proto_message_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CustomerMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerMessageRequest) ProtoMessage() {}

func (x *CustomerMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerMessageRequest.ProtoReflect.Descriptor instead.
func (*CustomerMessageRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{4}
}

func (x *CustomerMessageRequest) GetConversation() string {
	if x != nil {
		return x.Conversation
	}
	return ""
}

func (x *CustomerMessageRequest) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *CustomerMessageRequest) GetRecipient() []string {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (x *CustomerMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type CustomerMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message *Message `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CustomerMessageResponse) Reset() {
	*x = CustomerMessageResponse{}
	mi := &file_grpc_proto_message_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CustomerMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerMessageResponse) ProtoMessage() {}

func (x *CustomerMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerMessageResponse.ProtoReflect.Descriptor instead.
func (*CustomerMessageResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{5}
}

func (x *CustomerMessageResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CustomerMessageResponse) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

// --------------------------------------
// Send User Message
type UserSendMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderID    string `protobuf:"bytes,1,opt,name=senderID,proto3" json:"senderID,omitempty"`
	RecipientID string `protobuf:"bytes,2,opt,name=recipientID,proto3" json:"recipientID,omitempty"`
	Content     string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *UserSendMessageRequest) Reset() {
	*x = UserSendMessageRequest{}
	mi := &file_grpc_proto_message_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserSendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSendMessageRequest) ProtoMessage() {}

func (x *UserSendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSendMessageRequest.ProtoReflect.Descriptor instead.
func (*UserSendMessageRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{6}
}

func (x *UserSendMessageRequest) GetSenderID() string {
	if x != nil {
		return x.SenderID
	}
	return ""
}

func (x *UserSendMessageRequest) GetRecipientID() string {
	if x != nil {
		return x.RecipientID
	}
	return ""
}

func (x *UserSendMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type UserSendMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserMessage *Message `protobuf:"bytes,1,opt,name=userMessage,proto3" json:"userMessage,omitempty"`
	BotMessage  *Message `protobuf:"bytes,2,opt,name=botMessage,proto3" json:"botMessage,omitempty"`
}

func (x *UserSendMessageResponse) Reset() {
	*x = UserSendMessageResponse{}
	mi := &file_grpc_proto_message_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserSendMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSendMessageResponse) ProtoMessage() {}

func (x *UserSendMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSendMessageResponse.ProtoReflect.Descriptor instead.
func (*UserSendMessageResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{7}
}

func (x *UserSendMessageResponse) GetUserMessage() *Message {
	if x != nil {
		return x.UserMessage
	}
	return nil
}

func (x *UserSendMessageResponse) GetBotMessage() *Message {
	if x != nil {
		return x.BotMessage
	}
	return nil
}

// Edit Message
type EditMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderID       string `protobuf:"bytes,1,opt,name=senderID,proto3" json:"senderID,omitempty"`
	MessageID      string `protobuf:"bytes,2,opt,name=messageID,proto3" json:"messageID,omitempty"`
	ConversationID string `protobuf:"bytes,3,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
	NewContent     string `protobuf:"bytes,4,opt,name=newContent,proto3" json:"newContent,omitempty"`
}

func (x *EditMessageRequest) Reset() {
	*x = EditMessageRequest{}
	mi := &file_grpc_proto_message_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditMessageRequest) ProtoMessage() {}

func (x *EditMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditMessageRequest.ProtoReflect.Descriptor instead.
func (*EditMessageRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{8}
}

func (x *EditMessageRequest) GetSenderID() string {
	if x != nil {
		return x.SenderID
	}
	return ""
}

func (x *EditMessageRequest) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

func (x *EditMessageRequest) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *EditMessageRequest) GetNewContent() string {
	if x != nil {
		return x.NewContent
	}
	return ""
}

type EditMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EditMessageResponse) Reset() {
	*x = EditMessageResponse{}
	mi := &file_grpc_proto_message_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditMessageResponse) ProtoMessage() {}

func (x *EditMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditMessageResponse.ProtoReflect.Descriptor instead.
func (*EditMessageResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{9}
}

// Fetch Message
type FetchMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderID       string `protobuf:"bytes,1,opt,name=senderID,proto3" json:"senderID,omitempty"`
	MessageID      string `protobuf:"bytes,2,opt,name=messageID,proto3" json:"messageID,omitempty"`
	ConversationID string `protobuf:"bytes,3,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
}

func (x *FetchMessageRequest) Reset() {
	*x = FetchMessageRequest{}
	mi := &file_grpc_proto_message_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchMessageRequest) ProtoMessage() {}

func (x *FetchMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchMessageRequest.ProtoReflect.Descriptor instead.
func (*FetchMessageRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{10}
}

func (x *FetchMessageRequest) GetSenderID() string {
	if x != nil {
		return x.SenderID
	}
	return ""
}

func (x *FetchMessageRequest) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

func (x *FetchMessageRequest) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

type FetchMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *FetchMessageResponse) Reset() {
	*x = FetchMessageResponse{}
	mi := &file_grpc_proto_message_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchMessageResponse) ProtoMessage() {}

func (x *FetchMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchMessageResponse.ProtoReflect.Descriptor instead.
func (*FetchMessageResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{11}
}

func (x *FetchMessageResponse) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

// Delete Message
type DeleteMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderID       string `protobuf:"bytes,1,opt,name=senderID,proto3" json:"senderID,omitempty"`
	MessageID      string `protobuf:"bytes,2,opt,name=messageID,proto3" json:"messageID,omitempty"`
	ConversationID string `protobuf:"bytes,3,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
}

func (x *DeleteMessageRequest) Reset() {
	*x = DeleteMessageRequest{}
	mi := &file_grpc_proto_message_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMessageRequest) ProtoMessage() {}

func (x *DeleteMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMessageRequest.ProtoReflect.Descriptor instead.
func (*DeleteMessageRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteMessageRequest) GetSenderID() string {
	if x != nil {
		return x.SenderID
	}
	return ""
}

func (x *DeleteMessageRequest) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

func (x *DeleteMessageRequest) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

type DeleteMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteMessageResponse) Reset() {
	*x = DeleteMessageResponse{}
	mi := &file_grpc_proto_message_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMessageResponse) ProtoMessage() {}

func (x *DeleteMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMessageResponse.ProtoReflect.Descriptor instead.
func (*DeleteMessageResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{13}
}

// Read Message
type ReadMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationID string `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
}

func (x *ReadMessageRequest) Reset() {
	*x = ReadMessageRequest{}
	mi := &file_grpc_proto_message_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadMessageRequest) ProtoMessage() {}

func (x *ReadMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadMessageRequest.ProtoReflect.Descriptor instead.
func (*ReadMessageRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{14}
}

func (x *ReadMessageRequest) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

type ReadMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReadMessageResponse) Reset() {
	*x = ReadMessageResponse{}
	mi := &file_grpc_proto_message_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadMessageResponse) ProtoMessage() {}

func (x *ReadMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadMessageResponse.ProtoReflect.Descriptor instead.
func (*ReadMessageResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{15}
}

// Fetch Conversation Messages
type FetchConversationMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderID       string `protobuf:"bytes,1,opt,name=senderID,proto3" json:"senderID,omitempty"`
	ConversationID string `protobuf:"bytes,2,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
	PageState      []byte `protobuf:"bytes,3,opt,name=page_state,json=pageState,proto3" json:"page_state,omitempty"`
}

func (x *FetchConversationMessagesRequest) Reset() {
	*x = FetchConversationMessagesRequest{}
	mi := &file_grpc_proto_message_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchConversationMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchConversationMessagesRequest) ProtoMessage() {}

func (x *FetchConversationMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchConversationMessagesRequest.ProtoReflect.Descriptor instead.
func (*FetchConversationMessagesRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{16}
}

func (x *FetchConversationMessagesRequest) GetSenderID() string {
	if x != nil {
		return x.SenderID
	}
	return ""
}

func (x *FetchConversationMessagesRequest) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *FetchConversationMessagesRequest) GetPageState() []byte {
	if x != nil {
		return x.PageState
	}
	return nil
}

type FetchConversationMessagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages  []*Message `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	PageState []byte     `protobuf:"bytes,2,opt,name=page_state,json=pageState,proto3" json:"page_state,omitempty"`
}

func (x *FetchConversationMessagesResponse) Reset() {
	*x = FetchConversationMessagesResponse{}
	mi := &file_grpc_proto_message_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchConversationMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchConversationMessagesResponse) ProtoMessage() {}

func (x *FetchConversationMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchConversationMessagesResponse.ProtoReflect.Descriptor instead.
func (*FetchConversationMessagesResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{17}
}

func (x *FetchConversationMessagesResponse) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *FetchConversationMessagesResponse) GetPageState() []byte {
	if x != nil {
		return x.PageState
	}
	return nil
}

// Delete Conversation
type DeleteConversationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderID       string `protobuf:"bytes,1,opt,name=senderID,proto3" json:"senderID,omitempty"`
	ConversationID string `protobuf:"bytes,2,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
}

func (x *DeleteConversationRequest) Reset() {
	*x = DeleteConversationRequest{}
	mi := &file_grpc_proto_message_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConversationRequest) ProtoMessage() {}

func (x *DeleteConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConversationRequest.ProtoReflect.Descriptor instead.
func (*DeleteConversationRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteConversationRequest) GetSenderID() string {
	if x != nil {
		return x.SenderID
	}
	return ""
}

func (x *DeleteConversationRequest) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

type DeleteConversationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteConversationResponse) Reset() {
	*x = DeleteConversationResponse{}
	mi := &file_grpc_proto_message_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteConversationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConversationResponse) ProtoMessage() {}

func (x *DeleteConversationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConversationResponse.ProtoReflect.Descriptor instead.
func (*DeleteConversationResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{19}
}

// Fetch Conversation Messages
type FetchAllUserConversationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderID  string `protobuf:"bytes,1,opt,name=senderID,proto3" json:"senderID,omitempty"`
	PageState []byte `protobuf:"bytes,2,opt,name=page_state,json=pageState,proto3" json:"page_state,omitempty"`
}

func (x *FetchAllUserConversationsRequest) Reset() {
	*x = FetchAllUserConversationsRequest{}
	mi := &file_grpc_proto_message_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchAllUserConversationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchAllUserConversationsRequest) ProtoMessage() {}

func (x *FetchAllUserConversationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchAllUserConversationsRequest.ProtoReflect.Descriptor instead.
func (*FetchAllUserConversationsRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{20}
}

func (x *FetchAllUserConversationsRequest) GetSenderID() string {
	if x != nil {
		return x.SenderID
	}
	return ""
}

func (x *FetchAllUserConversationsRequest) GetPageState() []byte {
	if x != nil {
		return x.PageState
	}
	return nil
}

type FetchAllUserConversationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conversations []*ConversationRender `protobuf:"bytes,1,rep,name=conversations,proto3" json:"conversations,omitempty"`
	PageState     []byte                `protobuf:"bytes,2,opt,name=page_state,json=pageState,proto3" json:"page_state,omitempty"`
}

func (x *FetchAllUserConversationsResponse) Reset() {
	*x = FetchAllUserConversationsResponse{}
	mi := &file_grpc_proto_message_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchAllUserConversationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchAllUserConversationsResponse) ProtoMessage() {}

func (x *FetchAllUserConversationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchAllUserConversationsResponse.ProtoReflect.Descriptor instead.
func (*FetchAllUserConversationsResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{21}
}

func (x *FetchAllUserConversationsResponse) GetConversations() []*ConversationRender {
	if x != nil {
		return x.Conversations
	}
	return nil
}

func (x *FetchAllUserConversationsResponse) GetPageState() []byte {
	if x != nil {
		return x.PageState
	}
	return nil
}

// Fetch Conversation Messages Counter
type FetchConversationMessageCounterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationID string `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
}

func (x *FetchConversationMessageCounterRequest) Reset() {
	*x = FetchConversationMessageCounterRequest{}
	mi := &file_grpc_proto_message_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchConversationMessageCounterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchConversationMessageCounterRequest) ProtoMessage() {}

func (x *FetchConversationMessageCounterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchConversationMessageCounterRequest.ProtoReflect.Descriptor instead.
func (*FetchConversationMessageCounterRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{22}
}

func (x *FetchConversationMessageCounterRequest) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

type FetchConversationMessageCounterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationID string   `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
	MessageID      []string `protobuf:"bytes,2,rep,name=messageID,proto3" json:"messageID,omitempty"`
}

func (x *FetchConversationMessageCounterResponse) Reset() {
	*x = FetchConversationMessageCounterResponse{}
	mi := &file_grpc_proto_message_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchConversationMessageCounterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchConversationMessageCounterResponse) ProtoMessage() {}

func (x *FetchConversationMessageCounterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchConversationMessageCounterResponse.ProtoReflect.Descriptor instead.
func (*FetchConversationMessageCounterResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{23}
}

func (x *FetchConversationMessageCounterResponse) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *FetchConversationMessageCounterResponse) GetMessageID() []string {
	if x != nil {
		return x.MessageID
	}
	return nil
}

// Store Conversation Message Counter
type StoreConversationCounterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationID string   `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
	MessageID      []string `protobuf:"bytes,2,rep,name=messageID,proto3" json:"messageID,omitempty"`
}

func (x *StoreConversationCounterRequest) Reset() {
	*x = StoreConversationCounterRequest{}
	mi := &file_grpc_proto_message_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreConversationCounterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreConversationCounterRequest) ProtoMessage() {}

func (x *StoreConversationCounterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreConversationCounterRequest.ProtoReflect.Descriptor instead.
func (*StoreConversationCounterRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{24}
}

func (x *StoreConversationCounterRequest) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *StoreConversationCounterRequest) GetMessageID() []string {
	if x != nil {
		return x.MessageID
	}
	return nil
}

type StoreConversationCounterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StoreConversationCounterResponse) Reset() {
	*x = StoreConversationCounterResponse{}
	mi := &file_grpc_proto_message_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreConversationCounterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreConversationCounterResponse) ProtoMessage() {}

func (x *StoreConversationCounterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreConversationCounterResponse.ProtoReflect.Descriptor instead.
func (*StoreConversationCounterResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{25}
}

// --------------------------------------
// Chatbot Message
type ChatbotMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipient []string `protobuf:"bytes,1,rep,name=recipient,proto3" json:"recipient,omitempty"`
	Message   *Message `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ChatbotMessageRequest) Reset() {
	*x = ChatbotMessageRequest{}
	mi := &file_grpc_proto_message_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatbotMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatbotMessageRequest) ProtoMessage() {}

func (x *ChatbotMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatbotMessageRequest.ProtoReflect.Descriptor instead.
func (*ChatbotMessageRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{26}
}

func (x *ChatbotMessageRequest) GetRecipient() []string {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (x *ChatbotMessageRequest) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type ChatbotMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ChatbotMessageResponse) Reset() {
	*x = ChatbotMessageResponse{}
	mi := &file_grpc_proto_message_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatbotMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatbotMessageResponse) ProtoMessage() {}

func (x *ChatbotMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatbotMessageResponse.ProtoReflect.Descriptor instead.
func (*ChatbotMessageResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{27}
}

func (x *ChatbotMessageResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// --------------------------------------
// CREATE Task Message
type CreateTaskMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     string    `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Delay    int32     `protobuf:"varint,2,opt,name=delay,proto3" json:"delay,omitempty"`
	TaskData *TaskData `protobuf:"bytes,3,opt,name=taskData,proto3" json:"taskData,omitempty"`
}

func (x *CreateTaskMessageRequest) Reset() {
	*x = CreateTaskMessageRequest{}
	mi := &file_grpc_proto_message_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTaskMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskMessageRequest) ProtoMessage() {}

func (x *CreateTaskMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskMessageRequest.ProtoReflect.Descriptor instead.
func (*CreateTaskMessageRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{28}
}

func (x *CreateTaskMessageRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateTaskMessageRequest) GetDelay() int32 {
	if x != nil {
		return x.Delay
	}
	return 0
}

func (x *CreateTaskMessageRequest) GetTaskData() *TaskData {
	if x != nil {
		return x.TaskData
	}
	return nil
}

type CreateTaskMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CreateTaskMessageResponse) Reset() {
	*x = CreateTaskMessageResponse{}
	mi := &file_grpc_proto_message_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTaskMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskMessageResponse) ProtoMessage() {}

func (x *CreateTaskMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskMessageResponse.ProtoReflect.Descriptor instead.
func (*CreateTaskMessageResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{29}
}

func (x *CreateTaskMessageResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// --------------------------------------
// Complete Task Message (from TasksQueue to Message Microservice)
type CompleteTaskMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     string    `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	TaskData *TaskData `protobuf:"bytes,2,opt,name=taskData,proto3" json:"taskData,omitempty"`
}

func (x *CompleteTaskMessageRequest) Reset() {
	*x = CompleteTaskMessageRequest{}
	mi := &file_grpc_proto_message_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteTaskMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteTaskMessageRequest) ProtoMessage() {}

func (x *CompleteTaskMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteTaskMessageRequest.ProtoReflect.Descriptor instead.
func (*CompleteTaskMessageRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{30}
}

func (x *CompleteTaskMessageRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CompleteTaskMessageRequest) GetTaskData() *TaskData {
	if x != nil {
		return x.TaskData
	}
	return nil
}

type CompleteTaskMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CompleteTaskMessageResponse) Reset() {
	*x = CompleteTaskMessageResponse{}
	mi := &file_grpc_proto_message_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteTaskMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteTaskMessageResponse) ProtoMessage() {}

func (x *CompleteTaskMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteTaskMessageResponse.ProtoReflect.Descriptor instead.
func (*CompleteTaskMessageResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{31}
}

func (x *CompleteTaskMessageResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ConversationRender struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationID string         `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
	Participants   []*Participant `protobuf:"bytes,2,rep,name=participants,proto3" json:"participants,omitempty"`
	CreatedAt      string         `protobuf:"bytes,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	EditedAt       string         `protobuf:"bytes,4,opt,name=editedAt,proto3" json:"editedAt,omitempty"`
	Metadata       string         `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`
	State          string         `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	TotalUnread    int64          `protobuf:"varint,7,opt,name=totalUnread,proto3" json:"totalUnread,omitempty"`
}

func (x *ConversationRender) Reset() {
	*x = ConversationRender{}
	mi := &file_grpc_proto_message_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConversationRender) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationRender) ProtoMessage() {}

func (x *ConversationRender) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationRender.ProtoReflect.Descriptor instead.
func (*ConversationRender) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{32}
}

func (x *ConversationRender) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *ConversationRender) GetParticipants() []*Participant {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *ConversationRender) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ConversationRender) GetEditedAt() string {
	if x != nil {
		return x.EditedAt
	}
	return ""
}

func (x *ConversationRender) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *ConversationRender) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ConversationRender) GetTotalUnread() int64 {
	if x != nil {
		return x.TotalUnread
	}
	return 0
}

type Participant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	UserType  string `protobuf:"bytes,2,opt,name=UserType,proto3" json:"UserType,omitempty"`
	UserRole  string `protobuf:"bytes,3,opt,name=UserRole,proto3" json:"UserRole,omitempty"`
	Username  string `protobuf:"bytes,4,opt,name=Username,proto3" json:"Username,omitempty"`
	AvatarUrl string `protobuf:"bytes,5,opt,name=AvatarUrl,proto3" json:"AvatarUrl,omitempty"`
}

func (x *Participant) Reset() {
	*x = Participant{}
	mi := &file_grpc_proto_message_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Participant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Participant) ProtoMessage() {}

func (x *Participant) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Participant.ProtoReflect.Descriptor instead.
func (*Participant) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{33}
}

func (x *Participant) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *Participant) GetUserType() string {
	if x != nil {
		return x.UserType
	}
	return ""
}

func (x *Participant) GetUserRole() string {
	if x != nil {
		return x.UserRole
	}
	return ""
}

func (x *Participant) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Participant) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

// Conversation
type Conversation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationID string   `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
	Participants   []string `protobuf:"bytes,2,rep,name=participants,proto3" json:"participants,omitempty"`
	CreatedAt      string   `protobuf:"bytes,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	EditedAt       string   `protobuf:"bytes,4,opt,name=editedAt,proto3" json:"editedAt,omitempty"`
	Metadata       string   `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`
	State          string   `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *Conversation) Reset() {
	*x = Conversation{}
	mi := &file_grpc_proto_message_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Conversation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conversation) ProtoMessage() {}

func (x *Conversation) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conversation.ProtoReflect.Descriptor instead.
func (*Conversation) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{34}
}

func (x *Conversation) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *Conversation) GetParticipants() []string {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *Conversation) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Conversation) GetEditedAt() string {
	if x != nil {
		return x.EditedAt
	}
	return ""
}

func (x *Conversation) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *Conversation) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

// Message
type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageID      string `protobuf:"bytes,1,opt,name=messageID,proto3" json:"messageID,omitempty"`
	ConversationID string `protobuf:"bytes,2,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
	Sender         string `protobuf:"bytes,3,opt,name=sender,proto3" json:"sender,omitempty"`
	SenderType     string `protobuf:"bytes,4,opt,name=senderType,proto3" json:"senderType,omitempty"`
	Content        string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	State          string `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	CreatedAt      string `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	Metadata       string `protobuf:"bytes,8,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_grpc_proto_message_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{35}
}

func (x *Message) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

func (x *Message) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *Message) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *Message) GetSenderType() string {
	if x != nil {
		return x.SenderType
	}
	return ""
}

func (x *Message) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Message) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Message) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Message) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

// Task Data
type TaskData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageID      string   `protobuf:"bytes,1,opt,name=messageID,proto3" json:"messageID,omitempty"`
	ConversationID string   `protobuf:"bytes,2,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
	Sender         string   `protobuf:"bytes,3,opt,name=sender,proto3" json:"sender,omitempty"`
	Content        string   `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Timestamp      int64    `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	State          string   `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	Metadata       string   `protobuf:"bytes,7,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Recipient      []string `protobuf:"bytes,8,rep,name=recipient,proto3" json:"recipient,omitempty"`
}

func (x *TaskData) Reset() {
	*x = TaskData{}
	mi := &file_grpc_proto_message_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskData) ProtoMessage() {}

func (x *TaskData) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_message_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskData.ProtoReflect.Descriptor instead.
func (*TaskData) Descriptor() ([]byte, []int) {
	return file_grpc_proto_message_proto_rawDescGZIP(), []int{36}
}

func (x *TaskData) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

func (x *TaskData) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *TaskData) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *TaskData) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *TaskData) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TaskData) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *TaskData) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *TaskData) GetRecipient() []string {
	if x != nil {
		return x.Recipient
	}
	return nil
}

var File_grpc_proto_message_proto protoreflect.FileDescriptor

var file_grpc_proto_message_proto_rawDesc = []byte{
	0x0a, 0x18, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x50, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x69, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x30, 0x0a, 0x16,
	0x50, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x17,
	0x0a, 0x15, 0x50, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x30, 0x0a, 0x16, 0x50, 0x69, 0x6e, 0x67, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x16, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x5d, 0x0a, 0x17, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x70, 0x0a, 0x16, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a,
	0x0b, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x7f, 0x0a, 0x17, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x75, 0x73, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x62, 0x6f, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0a,
	0x62, 0x6f, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x12, 0x45,
	0x64, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x63,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x45, 0x64, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x77, 0x0a, 0x13, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x63,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x22, 0x42, 0x0a, 0x14, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x78, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x0a, 0x12, 0x52, 0x65,
	0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x15, 0x0a, 0x13, 0x52, 0x65, 0x61, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x85, 0x01, 0x0a, 0x20, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x70, 0x0a, 0x21, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x5f, 0x0a, 0x19, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x1c, 0x0a, 0x1a, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5d, 0x0a, 0x20, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x21, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a,
	0x0d, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22,
	0x50, 0x0a, 0x26, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x22, 0x6f, 0x0a, 0x27, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x44, 0x22, 0x67, 0x0a, 0x1f, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x22, 0x22, 0x0a, 0x20, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x61, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x74, 0x62, 0x6f, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x30, 0x0a, 0x16, 0x43, 0x68, 0x61, 0x74, 0x62, 0x6f, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x73, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x2d, 0x0a, 0x08, 0x74, 0x61,
	0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x08, 0x74, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x22, 0x33, 0x0a, 0x19, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5f,
	0x0a, 0x1a, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x2d, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x35, 0x0a, 0x1b, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x84, 0x02, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x26, 0x0a,
	0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x22, 0x97, 0x01,
	0x0a, 0x0b, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x22, 0xc6, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x22, 0xf1, 0x01, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xf0, 0x01, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12,
	0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x32, 0xea, 0x0b, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x50, 0x69,
	0x6e, 0x67, 0x41, 0x70, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x69, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x69, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a,
	0x0f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x1f, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x74, 0x62, 0x6f, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x43, 0x68, 0x61, 0x74, 0x62, 0x6f, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x43, 0x68, 0x61, 0x74, 0x62, 0x6f, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x50, 0x69, 0x6e, 0x67, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x1e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a,
	0x0b, 0x45, 0x64, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0c, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x1b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65,
	0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72,
	0x0a, 0x19, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x29, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5d, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x72, 0x0a, 0x19, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x29,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x6c,
	0x6c, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x1f, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x2f, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x1f,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12,
	0x28, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x18, 0x5a, 0x16, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x3b, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_proto_message_proto_rawDescOnce sync.Once
	file_grpc_proto_message_proto_rawDescData = file_grpc_proto_message_proto_rawDesc
)

func file_grpc_proto_message_proto_rawDescGZIP() []byte {
	file_grpc_proto_message_proto_rawDescOnce.Do(func() {
		file_grpc_proto_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_proto_message_proto_rawDescData)
	})
	return file_grpc_proto_message_proto_rawDescData
}

var file_grpc_proto_message_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_grpc_proto_message_proto_goTypes = []any{
	(*PingApiMessageRequest)(nil),                   // 0: message.PingApiMessageRequest
	(*PingApiMessageResponse)(nil),                  // 1: message.PingApiMessageResponse
	(*PingTasksQueueRequest)(nil),                   // 2: message.PingTasksQueueRequest
	(*PingTasksQueueResponse)(nil),                  // 3: message.PingTasksQueueResponse
	(*CustomerMessageRequest)(nil),                  // 4: message.CustomerMessageRequest
	(*CustomerMessageResponse)(nil),                 // 5: message.CustomerMessageResponse
	(*UserSendMessageRequest)(nil),                  // 6: message.UserSendMessageRequest
	(*UserSendMessageResponse)(nil),                 // 7: message.UserSendMessageResponse
	(*EditMessageRequest)(nil),                      // 8: message.EditMessageRequest
	(*EditMessageResponse)(nil),                     // 9: message.EditMessageResponse
	(*FetchMessageRequest)(nil),                     // 10: message.FetchMessageRequest
	(*FetchMessageResponse)(nil),                    // 11: message.FetchMessageResponse
	(*DeleteMessageRequest)(nil),                    // 12: message.DeleteMessageRequest
	(*DeleteMessageResponse)(nil),                   // 13: message.DeleteMessageResponse
	(*ReadMessageRequest)(nil),                      // 14: message.ReadMessageRequest
	(*ReadMessageResponse)(nil),                     // 15: message.ReadMessageResponse
	(*FetchConversationMessagesRequest)(nil),        // 16: message.FetchConversationMessagesRequest
	(*FetchConversationMessagesResponse)(nil),       // 17: message.FetchConversationMessagesResponse
	(*DeleteConversationRequest)(nil),               // 18: message.DeleteConversationRequest
	(*DeleteConversationResponse)(nil),              // 19: message.DeleteConversationResponse
	(*FetchAllUserConversationsRequest)(nil),        // 20: message.FetchAllUserConversationsRequest
	(*FetchAllUserConversationsResponse)(nil),       // 21: message.FetchAllUserConversationsResponse
	(*FetchConversationMessageCounterRequest)(nil),  // 22: message.FetchConversationMessageCounterRequest
	(*FetchConversationMessageCounterResponse)(nil), // 23: message.FetchConversationMessageCounterResponse
	(*StoreConversationCounterRequest)(nil),         // 24: message.StoreConversationCounterRequest
	(*StoreConversationCounterResponse)(nil),        // 25: message.StoreConversationCounterResponse
	(*ChatbotMessageRequest)(nil),                   // 26: message.ChatbotMessageRequest
	(*ChatbotMessageResponse)(nil),                  // 27: message.ChatbotMessageResponse
	(*CreateTaskMessageRequest)(nil),                // 28: message.CreateTaskMessageRequest
	(*CreateTaskMessageResponse)(nil),               // 29: message.CreateTaskMessageResponse
	(*CompleteTaskMessageRequest)(nil),              // 30: message.CompleteTaskMessageRequest
	(*CompleteTaskMessageResponse)(nil),             // 31: message.CompleteTaskMessageResponse
	(*ConversationRender)(nil),                      // 32: message.ConversationRender
	(*Participant)(nil),                             // 33: message.Participant
	(*Conversation)(nil),                            // 34: message.Conversation
	(*Message)(nil),                                 // 35: message.Message
	(*TaskData)(nil),                                // 36: message.TaskData
}
var file_grpc_proto_message_proto_depIdxs = []int32{
	35, // 0: message.CustomerMessageResponse.message:type_name -> message.Message
	35, // 1: message.UserSendMessageResponse.userMessage:type_name -> message.Message
	35, // 2: message.UserSendMessageResponse.botMessage:type_name -> message.Message
	35, // 3: message.FetchMessageResponse.message:type_name -> message.Message
	35, // 4: message.FetchConversationMessagesResponse.messages:type_name -> message.Message
	32, // 5: message.FetchAllUserConversationsResponse.conversations:type_name -> message.ConversationRender
	35, // 6: message.ChatbotMessageRequest.message:type_name -> message.Message
	36, // 7: message.CreateTaskMessageRequest.taskData:type_name -> message.TaskData
	36, // 8: message.CompleteTaskMessageRequest.taskData:type_name -> message.TaskData
	33, // 9: message.ConversationRender.participants:type_name -> message.Participant
	0,  // 10: message.MessageService.PingApiMessage:input_type -> message.PingApiMessageRequest
	4,  // 11: message.MessageService.CustomerMessage:input_type -> message.CustomerMessageRequest
	26, // 12: message.MessageService.ChatbotMessage:input_type -> message.ChatbotMessageRequest
	2,  // 13: message.MessageService.PingTasksQueue:input_type -> message.PingTasksQueueRequest
	28, // 14: message.MessageService.CreateTaskMessage:input_type -> message.CreateTaskMessageRequest
	30, // 15: message.MessageService.CompleteTaskMessage:input_type -> message.CompleteTaskMessageRequest
	6,  // 16: message.MessageService.UserSendMessage:input_type -> message.UserSendMessageRequest
	8,  // 17: message.MessageService.EditMessage:input_type -> message.EditMessageRequest
	10, // 18: message.MessageService.FetchMessage:input_type -> message.FetchMessageRequest
	12, // 19: message.MessageService.DeleteMessage:input_type -> message.DeleteMessageRequest
	14, // 20: message.MessageService.ReadMessage:input_type -> message.ReadMessageRequest
	16, // 21: message.MessageService.FetchConversationMessages:input_type -> message.FetchConversationMessagesRequest
	18, // 22: message.MessageService.DeleteConversation:input_type -> message.DeleteConversationRequest
	20, // 23: message.MessageService.FetchAllUserConversations:input_type -> message.FetchAllUserConversationsRequest
	22, // 24: message.MessageService.FetchConversationMessageCounter:input_type -> message.FetchConversationMessageCounterRequest
	24, // 25: message.MessageService.StoreConversationMessageCounter:input_type -> message.StoreConversationCounterRequest
	1,  // 26: message.MessageService.PingApiMessage:output_type -> message.PingApiMessageResponse
	5,  // 27: message.MessageService.CustomerMessage:output_type -> message.CustomerMessageResponse
	27, // 28: message.MessageService.ChatbotMessage:output_type -> message.ChatbotMessageResponse
	3,  // 29: message.MessageService.PingTasksQueue:output_type -> message.PingTasksQueueResponse
	29, // 30: message.MessageService.CreateTaskMessage:output_type -> message.CreateTaskMessageResponse
	31, // 31: message.MessageService.CompleteTaskMessage:output_type -> message.CompleteTaskMessageResponse
	7,  // 32: message.MessageService.UserSendMessage:output_type -> message.UserSendMessageResponse
	9,  // 33: message.MessageService.EditMessage:output_type -> message.EditMessageResponse
	11, // 34: message.MessageService.FetchMessage:output_type -> message.FetchMessageResponse
	13, // 35: message.MessageService.DeleteMessage:output_type -> message.DeleteMessageResponse
	15, // 36: message.MessageService.ReadMessage:output_type -> message.ReadMessageResponse
	17, // 37: message.MessageService.FetchConversationMessages:output_type -> message.FetchConversationMessagesResponse
	19, // 38: message.MessageService.DeleteConversation:output_type -> message.DeleteConversationResponse
	21, // 39: message.MessageService.FetchAllUserConversations:output_type -> message.FetchAllUserConversationsResponse
	23, // 40: message.MessageService.FetchConversationMessageCounter:output_type -> message.FetchConversationMessageCounterResponse
	25, // 41: message.MessageService.StoreConversationMessageCounter:output_type -> message.StoreConversationCounterResponse
	26, // [26:42] is the sub-list for method output_type
	10, // [10:26] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_grpc_proto_message_proto_init() }
func file_grpc_proto_message_proto_init() {
	if File_grpc_proto_message_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_proto_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_proto_message_proto_goTypes,
		DependencyIndexes: file_grpc_proto_message_proto_depIdxs,
		MessageInfos:      file_grpc_proto_message_proto_msgTypes,
	}.Build()
	File_grpc_proto_message_proto = out.File
	file_grpc_proto_message_proto_rawDesc = nil
	file_grpc_proto_message_proto_goTypes = nil
	file_grpc_proto_message_proto_depIdxs = nil
}
